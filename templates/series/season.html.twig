{% extends 'base.html.twig' %}

{% block title %}my Tv Time → {{ 'Series'|trans }} → {{ season.localized_name.name ?? series.name }} → {{ 'season'|trans }} {{ season.season_number }}{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('styles/series.scss') }}">
{% endblock %}
{% block body %}
    <script>
        const bd = '/series/posters{{ season.poster_path }}';
        const body = document.querySelector("body");
        body.style.backgroundSize = "cover";
        body.style.backgroundPosition = "center";
        body.style.backgroundRepeat = "no-repeat";
        body.style.backgroundAttachment = "fixed";
        body.style.backgroundImage = "url(" + bd + ")";
    </script>
    <div class="container-fluid backgroundImageOverlay">
        {% include '_blocks/_menu.html.twig' %}
        <div class="series-show">
            <div class="header">
                <div class="poster">
                    <img src="/series/posters{{ season.poster_path }}" alt="{{ series.name }} {{ season.season_number }}">
                </div>
                <div class="infos">
                    <h1>{{ season.name }} ({{ season.air_date|date("Y") }})</h1>
                    <div class="overview">{{ season.overview }}</div>
                    {% if season.deepl %}
                        {% if season.deepl.localized %}
                            <div class="overview deepl">{{ season.deepl.localizedOverview|raw }}</div>
                        {% endif %}
                    {% endif %}
                    <div class="backdrop">
                        <img src="/series/backdrops{{ series.backdropPath }}" alt="{{ series.name }}">
                    </div>
                </div>
                <div class="series-back">
                    <a href="{{ path('app_series_show', {id: series.id, slug: season.localized_name.slug ?? series.slug}) }}">
                        {% if series.posterPath %}
                            <div class="poster-back">
                                <img src="/series/posters{{ series.posterPath }}" alt="{{ series.name }} {{ season.season_number }}">
                            </div>
                        {% endif %}
                        <div class="series-back-link">
                            <i class="fas fa-arrow-left"></i>&nbsp;<span>{{ 'Back to series'|trans }}</span>
                        </div>
                    </a>
                </div>
            </div>

            <div class="content column">
                <div class="seasons-episodes">
                    <h3>{{ 'Episodes'|trans }}</h3>
                    {% for episode in season.episodes %}
                        <div class="season-episode" id="episode-{{ episode.episode_number }}">
                            <div class="still">
                                {% if episode.still_path %}
                                    <img src="{{ episode.still_path }}" alt="{{ episode.name }}">
                                {% else %}
                                    <div>{{ 'No poster'|trans }}</div>
                                {% endif %}
                                <div class="number">
                                    {{ episode.episode_number }}
                                </div>
                            </div>
                            <div class="infos">
                                <div class="name">{{ episode.name }}</div>
                                {% if episode.air_date %}
                                    <div class="air-date">{{ 'Air date'|trans }} {{ date(episode.air_date)|format_date('relative_long') }}</div>
                                {% endif %}
                                {% if episode.runtime %}
                                    <div class="runtime">{{ episode.runtime }} {{ 'minutes'|trans }}</div>
                                {% endif %}
                                {% if episode.overview %}
                                    <div class="overview">{{ episode.overview }}</div>
                                {% endif %}
                                {% if episode.guest_stars %}
                                    <div class="guest-stars">
                                        <div class="wrapper">
                                            {% for people in episode.guest_stars %}
                                                <a href="{{ path('app_series_people', {id: people.id, slug: people.slug}) }}">
                                                    <div class="people" data-title="{{ people.name }} - {{ people.character }}">
                                                        <div class="profile">
                                                            {% if people.profile_path %}
                                                                <img src="{{ people.profile_path }}" alt="{{ people.name }}">
                                                            {% else %}
                                                                {{ 'No picture'|trans }}
                                                            {% endif %}
                                                        </div>
                                                    </div>
                                                </a>
                                            {% endfor %}
                                        </div>
                                    </div>
                                {% endif %}
                            </div>
                            <div class="user-episode">
                                {% if episode.user_episode %}
                                    <div class="remove-this-episode" data-id="{{ episode.id }}" data-title="{{ episode.user_episode.watchAt|format_datetime('relative_short', 'short')|capitalize }}">
                                        <i class="fas fa-eye"></i>
                                    </div>
                                    <div class="select-provider" data-id="{{ episode.id }}" data-title="{{ 'Choose a provider'|trans }}">
                                        {% if episode.user_episode.providerId %}
                                            <img src="{{ providers.logos[episode.user_episode.providerId] }}" alt="{{ providers.names[episode.user_episode.providerId] }}" data-title="{{ providers.names[episode.user_episode.providerId] }}">
                                        {% else %}
                                            <i class="fas fa-plus"></i>
                                        {% endif %}
                                    </div>
                                    <div class="select-device" data-id="{{ episode.id }}" data-title="{{ 'Choose a device'|trans }}">
                                        {% if episode.user_episode.deviceId %}
                                            <img src="{{ deviceLogo(episode.user_episode.deviceId) }}" alt="{{ deviceName(episode.user_episode.deviceId)|trans }}" data-title="{{ deviceName(episode.user_episode.deviceId)|trans }}">
                                        {% else %}
                                            <i class="fas fa-plus"></i>
                                        {% endif %}
                                    </div>
                                    <div class="select-vote" data-id="{{ episode.id }}" data-title="{{ 'Give a rating'|trans }}">
                                        {% if episode.user_episode.vote %}
                                            {{ episode.user_episode.vote }}
                                        {% else %}
                                            <i class="fas fa-plus"></i>
                                        {% endif %}
                                    </div>
                                {% else %}
                                    <div class="add-this-episode" data-id="{{ episode.id }}" data-show-id="{{ episode.show_id }}" data-s-number="{{ episode.season_number }}" data-e-number="{{ episode.episode_number }}">
                                        <i class="fas fa-plus"></i>
                                    </div>
                                    {# TODO: Dialog (provider, device, vote) #}
                                {% endif %}
                            </div>
                        </div>
                    {% endfor %}
                </div>
                {% if season.credits.cast|length %}
                    <h3>{{ 'Cast'|trans }}</h3>
                    <div class="cast">
                        <div class="wrapper">
                            {% for people in season.credits.cast %}
                                <a href="{{ path('app_series_people', {id: people.id, slug: people.slug}) }}">
                                    <div class="people">
                                        <div class="profile">
                                            {% if people.profile_path %}
                                                <img src="{{ people.profile_path }}" alt="{{ people.name }}">
                                            {% else %}
                                                {{ 'No picture'|trans }}
                                            {% endif %}
                                        </div>
                                        <div class="infos">
                                            <div class="name">{{ people.name }}</div>
                                            <div>{{ people.character }}</div>
                                        </div>
                                    </div>
                                </a>
                            {% endfor %}
                        </div>
                    </div>
                {% endif %}

                {% if season.credits.guest_stars|length %}
                    <h3>{{ 'Guest starts'|trans }}</h3>
                    <div class="cast">
                        <div class="wrapper">
                            {% for people in season.credits.guest_stars %}
                                <a href="{{ path('app_series_people', {id: people.id, slug: people.slug}) }}">
                                    <div class="people">
                                        <div class="profile">
                                            {% if people.profile_path %}
                                                <img src="{{ people.profile_path }}" alt="{{ people.name }}">
                                            {% else %}
                                                {{ 'No picture'|trans }}
                                            {% endif %}
                                        </div>
                                        <div class="infos">
                                            <div class="name">{{ people.name }}</div>
                                            <div>{{ people.caracter }}</div>
                                        </div>
                                    </div>
                                </a>
                            {% endfor %}
                        </div>
                    </div>
                {% endif %}

                {% if season.credits.crew|length %}
                    <h3>{{ 'Crew'|trans }}</h3>
                    <div class="crew">
                        <div class="wrapper">
                            {% for people in season.credits.crew %}
                                <a href="{{ path('app_series_people', {id: people.id, slug: people.slug}) }}">
                                    <div class="people">
                                        <div class="profile">
                                            {% if people.profile_path %}
                                                <img src="{{ people.profile_path }}" alt="{{ people.name }}">
                                            {% else %}
                                                {{ 'No picture'|trans }}
                                            {% endif %}
                                        </div>
                                        <div class="infos">
                                            <div class="name">{{ people.name }}</div>
                                            <div>{{ people.job ~ ' - ' ~ people.department }}</div>
                                        </div>
                                    </div>
                                </a>
                            {% endfor %}
                        </div>
                    </div>
                {% endif %}
            </div>
        </div>
        {% include '_blocks/_footer.html.twig' %}
    </div>
    <div id="globs" style="display: none">
        {
        "seasonProvider": {{ season["watch/providers"]|json_encode(constant('JSON_PRETTY_PRINT'))|raw }},
        "providers": {{ providers|json_encode(constant('JSON_PRETTY_PRINT'))|raw }},
        "devices": {{ devices|json_encode(constant('JSON_PRETTY_PRINT'))|raw }}
        }
    </div>
    <pre>
{#        {{ dump(devices) }}#}
    </pre>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        const text = {
            'provider': '{{ 'Choose a provider'|trans }}',
            'device': '{{ 'Choose a device'|trans }}',
            'rating': '{{ 'Give a rating'|trans }}',
            'now': '{{ 'Now'|trans }}',
            'Television': '{{ 'Television'|trans }}',
            'Mobile': '{{ 'Mobile'|trans }}',
            'Tablet': '{{ 'Tablet'|trans }}',
            'Laptop': '{{ 'Laptop'|trans }}',
            'Desktop': '{{ 'Desktop'|trans }}',
            'search': '{{ 'Search'|trans }}'
        };
        document.addEventListener('DOMContentLoaded', function () {

            /**
             * @typedef Provider
             * @type {Object}
             * @property {number} provider_id
             * @property {string} name
             * @property {string} logo_path
             */
            /**
             * @typedef Device
             * @type {Object}
             * @property {number} id
             * @property {string} name
             * @property {string} logo_path
             */
            /**
             * @typedef FlatRate
             * @type {Array.<Provider>}
             */
            /**
             * @typedef Rent
             * @type {Array.<Provider>}
             */
            /**
             * @typedef Buy
             * @type {Array.<Provider>}
             */
            /**
             * @typedef SeasonProvider
             * @type {Object}
             * @property {FlatRate} flatrate
             * @property {Rent} rent
             * @property {Buy} buy
             */
            /**
             * @typedef wpSelect
             * @type {Array.<key: value>}
             */
            /**
             * @typedef wpLogos
             * @type {Array.<key: value>}
             */
            /**
             * @typedef wpNames
             * @type {Array.<key: value>}
             */
            /**
             * @typedef wpList
             * @type {Array.<Provider>}
             */
            /**
             * @typedef Providers
             * @type {Object}
             * @property {wpSelect} watchProviderSelect
             * @property {wpLogos} logos
             * @property {wpNames} names
             * @property {wpList} list
             */
            /**
             * @typedef Devices
             * @type {Array.<Device>}
             */
            /**
             * @typedef Globs
             * @type {Object}
             * @property {SeasonProvider} seasonProvider
             * @property {Providers} providers
             * @property {Devices} devices
             */

            /** @var {Globs} jsonGlobsObject */
            const jsonGlobsObject = JSON.parse(document.querySelector('div#globs').textContent);
            const seasonProvider = jsonGlobsObject.seasonProvider;
            const providers = jsonGlobsObject.providers;
            const providerArray = jsonGlobsObject.providers.list;
            const devices = jsonGlobsObject.devices;

            const seasonsEpisodes = document.querySelector('.seasons-episodes');
            const infos = seasonsEpisodes.querySelectorAll('.infos');
            infos.forEach(info => {
                info.addEventListener('mouseleave', () => {
                    info.scrollTop = 0;
                });
            });

            const lang = document.documentElement.lang;
            const addThisEpisode = document.querySelectorAll('.add-this-episode');
            addThisEpisode.forEach(episode => {
                episode.addEventListener('click', addEpisode);
            });

            const userEpisodeProviders = document.querySelectorAll('.select-provider');
            userEpisodeProviders.forEach(provider => {
                provider.addEventListener('mouseenter', selectProvider);
                provider.addEventListener('mouseleave', removeList);
            });

            const userEpisodeDevices = document.querySelectorAll('.select-device');
            userEpisodeDevices.forEach(device => {
                device.addEventListener('mouseenter', selectDevice);
                device.addEventListener('mouseleave', removeList);
            });

            const userEpisodeVotes = document.querySelectorAll('.select-vote');
            userEpisodeVotes.forEach(vote => {
                vote.addEventListener('mouseenter', selectVote);
                vote.addEventListener('mouseleave', removeList);
            });

            function addEpisode(e) {
                const episode = e.currentTarget
                const id = episode.getAttribute('data-id');
                fetch('/' + lang + '/series/add/episode/' + id, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({
                        showId: episode.getAttribute('data-show-id'),
                        seasonNumber: episode.getAttribute('data-s-number'),
                        episodeNumber: episode.getAttribute('data-e-number')
                    })
                }).then(function (response) {
                    if (response.ok) {
                        episode.removeEventListener('click', addEpisode);

                        episode.innerHTML = '<i class="fas fa-eye"></i>';
                        episode.classList.remove('add-this-episode');
                        episode.classList.add('remove-this-episode');
                        episode.setAttribute('data-title', text.now);

                        const provider = document.createElement('div');
                        provider.classList.add('select-provider');
                        provider.setAttribute('data-id', id);
                        provider.setAttribute('data-title', text.provider);
                        provider.innerHTML = '<i class="fas fa-plus"></i>';
                        provider.addEventListener('mouseenter', selectProvider);
                        provider.addEventListener('mouseleave', removeList);
                        episode.parentElement.appendChild(provider);

                        const device = document.createElement('div');
                        device.classList.add('select-device');
                        device.setAttribute('data-id', id);
                        device.setAttribute('data-title', text.device);
                        device.innerHTML = '<i class="fas fa-plus"></i>';
                        device.addEventListener('mouseenter', selectDevice);
                        device.addEventListener('mouseleave', removeList);
                        episode.parentElement.appendChild(device);

                        const vote = document.createElement('div');
                        vote.classList.add('select-device');
                        vote.setAttribute('data-id', id);
                        vote.setAttribute('data-title', text.rating);
                        vote.innerHTML = '<i class="fas fa-plus"></i>';
                        vote.addEventListener('mouseenter', selectVote);
                        vote.addEventListener('mouseleave', removeList);
                        episode.parentElement.appendChild(vote);
                    }
                });
            }

            function selectProvider(e) {
                const selectProviderDiv = e.currentTarget
                const episodeId = selectProviderDiv.getAttribute('data-id');
                const flatrate = seasonProvider['flatrate'];
                const providerList = document.createElement('div');
                providerList.classList.add('list');
                selectProviderDiv.appendChild(providerList);
                if (flatrate.length > 0) {
                    for (const provider of flatrate) {
                        addProviderItem(provider, episodeId, providerList, selectProviderDiv);
                    }
                } else {
                    for (const provider of providerArray) {
                        addProviderItem(provider, episodeId, providerList, selectProviderDiv);
                    }
                }
                listInput(providerList);
                // toolTips.init(providerList);
            }

            function addProviderItem(provider, episodeId, providerList, selectProviderDiv) {
                const providerDiv = document.createElement('div');
                providerDiv.classList.add('item');
                providerDiv.setAttribute('data-provider-id', provider['provider_id'].toString());
                providerDiv.setAttribute('data-title', provider['provider_name']);
                providerDiv.innerHTML = '<img src="' + provider['logo_path'] + '" alt="' + provider['provider_name'] + '">';
                providerDiv.addEventListener('click', () => {
                    const providerId = providerDiv.getAttribute('data-provider-id');
                    fetch('/' + lang + '/series/episode/provider/' + episodeId, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({
                            providerId: providerId
                        })
                    }).then(function (response) {
                        if (response.ok) {
                            selectProviderDiv.innerHTML = '<img src="' + providers.logos[providerId] + '" alt="' + providers.names[providerId] + '">';
                            selectProviderDiv.setAttribute('data-title', providers.names[providerId]);
                            providerList.remove();
                        }
                    });
                });
                providerList.appendChild(providerDiv);
            }

            function selectDevice(e) {
                const selectDeviceDiv = e.currentTarget;
                const episodeId = selectDeviceDiv.getAttribute('data-id');
                const deviceList = document.createElement('div');
                deviceList.classList.add('list');
                selectDeviceDiv.appendChild(deviceList);
                for (const device of devices) {
                    addDeviceItem(device, episodeId, deviceList, selectDeviceDiv);
                }
                listInput(deviceList);
                // toolTips.init(deviceList);
            }

            function addDeviceItem(device, episodeId, deviceList, selectDeviceDiv) {
                const deviceDiv = document.createElement('div');
                deviceDiv.classList.add('item');
                deviceDiv.setAttribute('data-id', device['id']);
                deviceDiv.setAttribute('data-title', text[device['name']]);
                deviceDiv.innerHTML = '<img src="/series/devices' + device['logo_path'] + '" alt="' + device['name'] + '">';
                deviceDiv.addEventListener('click', () => {
                    const deviceId = deviceDiv.getAttribute('data-id');
                    fetch('/' + lang + '/series/episode/device/' + episodeId, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({
                            deviceId: deviceId
                        })
                    }).then(function (response) {
                        if (response.ok) {
                            selectDeviceDiv.innerHTML = '<img src="/series/devices' + device['logo_path'] + '" alt="' + device['name'] + '">';
                            selectDeviceDiv.setAttribute('data-title', text[device['name']]);
                            deviceList.remove();
                        }
                    });
                });
                deviceList.appendChild(deviceDiv);
            }

            function selectVote(e) {
                const selectVoteDiv = e.currentTarget;
                const episodeId = selectVoteDiv.getAttribute('data-id');
                const voteList = document.createElement('div');
                voteList.classList.add('list');
                selectVoteDiv.appendChild(voteList);
                for (let i = 1; i <= 10; i++) {
                    const vote = document.createElement('div');
                    vote.classList.add('item');
                    vote.setAttribute('data-vote', i.toString());
                    vote.setAttribute('data-title', i.toString());
                    vote.innerHTML = i.toString();
                    vote.addEventListener('click', () => {
                        const voteValue = vote.getAttribute('data-vote');
                        fetch('/' + lang + '/series/episode/vote/' + episodeId, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest'
                            },
                            body: JSON.stringify({
                                vote: voteValue
                            })
                        }).then(function (response) {
                            if (response.ok) {
                                selectVoteDiv.innerHTML = voteValue;
                                voteList.remove();
                            }
                        });
                    });
                    voteList.appendChild(vote);
                }
                listInput(voteList);
            }

            function listInput(list) {

                const input = document.createElement('input');
                input.setAttribute('type', 'text');
                input.setAttribute('size', '10');
                input.setAttribute('placeholder', text.search);
                list.appendChild(input);
                input.addEventListener('keydown', (e) => {
                    if (e.key === 'Escape') {
                        list.remove();
                    }
                });
                input.addEventListener('input', (e) => {
                    const value = e.target.value.toLowerCase();
                    const items = list.querySelectorAll('.item');
                    items.forEach(item => {
                        const title = item.getAttribute('data-title').toLowerCase();
                        if (title.includes(value)) {
                            item.style.display = 'flex';
                        } else {
                            item.style.display = 'none';
                        }
                    });
                });
                input.focus({'preventScroll': true});
            }

            function removeList(e) {
                const list = e.currentTarget.querySelector('.list');
                if (list) {
                    list.remove();
                }
            }
        });
    </script>
{% endblock %}
