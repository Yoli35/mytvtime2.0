{% extends 'base.html.twig' %}

{% block title %}my Tv Time → {{ 'Series.in progress'|trans }}{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('styles/filter.scss') }}">
    <link rel="stylesheet" href="{{ asset('styles/home.scss') }}">
    <link rel="stylesheet" href="{{ asset('styles/series.scss') }}">
{% endblock %}

{% block body %}
    {% include('_blocks/_menu.html.twig') %}
    <div class="all-my-series container-fluid filter-page">
        <h1>{{ 'Series.in progress'|trans }}</h1>
        {% if userSeriesCount < 20 %}
            {{ include('_blocks/series/_search.html.twig') }}
        {% endif %}
        <aside>
            <article>
                <header>
                    <div class="title">{{ 'Filters'|trans }}</div>
                    <div class="filter-values">
                        <div class="filter-value" data-title="{{ 'Sort'|trans }} / {{ 'Order'|trans }}">
                            {{ ux_icon('mdi:settings') }}&nbsp;
                            {{ filterMeanings[filters.sort]|trans }}&nbsp;
                            {% if filters.order == 'DESC' %}
                                {{ ux_icon('mdi:arrow-down') }}
                            {% else %}
                                {{ ux_icon('mdi:arrow-up') }}
                            {% endif %}
                        </div>
                        <div class="filter-value" data-title="{{ 'Number of elements per page'|trans }}">
                            {{ ux_icon('mdi:dots-grid') }}&nbsp;{{ filters.perPage }}
                        </div>
                    </div>
                    <div class="collapse" data-title="{{ 'Show / hide filter options'|trans }}">
                        {% if filterBoxOpen %}
                            {{ ux_icon('mdi:chevron-down') }}
                        {% else %}
                            {{ ux_icon('mdi:chevron-up') }}
                        {% endif %}
                    </div>
                </header>
                <div class="filters{% if filterBoxOpen == 0 %} collapse{% endif %}">
                    <div class="filter">
                        <label for="network">
                            {{ 'Network'|trans }}
                            {% if networkLogoPaths[filters.network] %}
                                <div class="logo" data-title="{{ 'Network'|trans }}" data-title-bg="white"><img src="{{ networkLogoPaths[filters.network] }}" alt="{{ 'Network'|trans }}"></div>
                            {% endif %}
                            <select id="network">
                                <option value="all">{{ 'All'|trans }}</option>
                                <hr>
                                {% set userNetwork = 0 %}
                                {% for un in userNetworks %}
                                    <option value="{{ un.id }}"{% if filters.network==un.id %} selected{% endif %}>{{ un.name }}</option>
                                    {% if filters.network==un.id %}
                                        {% set userNetwork = 1 %}
                                    {% endif %}
                                {% endfor %}
                                <hr>
                                {% if userNetwork %}
                                    {% for n in networks %}
                                        <option value="{{ n.id }}">{{ n.name }}</option>
                                    {% endfor %}
                                {% else %}
                                    {% for n in networks %}
                                        <option value="{{ n.id }}"{% if filters.network==n.id %} selected{% endif %}>{{ n.name }}</option>
                                    {% endfor %}
                                {% endif %}
                            </select>
                        </label>
                    </div>
                    <div class="filter">
                        <label for="per-page">{{ 'Number of elements per page'|trans }}
                            <select id="per-page">
                                {% for number in [10, 20, 50, 100] %}
                                    <option value="{{ number }}"{% if filters.perPage==number %} selected{% endif %}>{{ number }}</option>
                                {% endfor %}
                            </select>
                        </label>
                    </div>
                    <div class="filter">
                        <label for="sort-by">{{ 'Sort'|trans }}
                            <select id="sort-by">
                                <option value="">{{ 'Default'|trans }}</option>
                                <option value="name"{% if filters.sort=='name' %} selected{% endif %}>{{ 'Name'|trans }}</option>
                                <option value="addedAt"{% if filters.sort=='addedAt' %} selected{% endif %}>{{ 'Date added'|trans }}</option>
                                <option value="firstAirDate"{% if filters.sort=='firstAirDate' %} selected{% endif %}>{{ 'First air date'|trans }}</option>
                                <option value="lastWatched"{% if filters.sort=='lastWatched' %} selected{% endif %}>{{ 'Last series watched'|trans }}</option>
                                <option value="episodeAirDate"{% if filters.sort=='episodeAirDate' %} selected{% endif %}>{{ 'Episode air date'|trans }}</option>
                            </select>
                        </label>
                    </div>
                    <div class="filter">
                        <label for="order-by">{{ 'Order'|trans }}
                            <select id="order-by">
                                <option value="DESC"{% if filters.order=='DESC' %} selected{% endif %}>{{ 'Descending'|trans }} ↓</option>
                                <option value="ASC"{% if filters.order=='ASC' %} selected{% endif %}>{{ 'Ascending'|trans }} ↑</option>
                            </select>
                        </label>
                    </div>
                </div>
            </article>
            {{ include('_blocks/_pagination.html.twig', {index: 1, current_page: filters.page, total_pages: pages}) }}
        </aside>
        <main>
            <article>
                <header>
                    <div class="title">{{ 'My series'|trans }} ({{ userSeriesCount }} {{ 'seriess'|trans }})</div>
                </header>
                <div class="wrapper">
                    {% for series in userSeries %}
                        {{ include('_blocks/series/_card.html.twig', {allFiltered: true, sort: filters.sort}) }}
                    {% endfor %}
                </div>
            </article>
        </main>
        <aside>
            {{ include('_blocks/_pagination.html.twig', {index: 2, current_page: filters.page, total_pages: pages}) }}
        </aside>
    </div>
    <div id="global-data" class="hidden">
        {
        "tmdbIds": {{ tmdbIds|json_encode|raw }},
        "app_series_tmdb_check": "{{ path('app_series_tmdb_check') }}"
        }
    </div>
    <div id="svgs" style="display: none">
        <div id="arrow-down">{{ ux_icon('mdi:arrow-down') }}</div>
        <div id="arrow-up">{{ ux_icon('mdi:arrow-up') }}</div>
        <div id="chevron-collapse">{{ ux_icon('mdi:chevron-down') }}</div>
        <div id="chevron-expand">{{ ux_icon('mdi:chevron-up') }}</div>
    </div>
    {% include('_blocks/_footer.html.twig') %}
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        const svgPathCollapse = '<path fill="currentColor" d="M117.863 88.282c-8.681 10.017-7.598 25.174 2.419 33.855l120 104c9.02 7.818 22.416 7.818 31.436 0l120-104c10.017-8.681 11.1-23.838 2.419-33.855s-23.839-11.099-33.855-2.418L256 176.241L151.718 85.864c-10.016-8.681-25.174-7.598-33.855 2.418m0 335.436c-8.681-10.017-7.598-25.174 2.419-33.855l120-104c9.02-7.818 22.416-7.818 31.436 0l120 104c10.017 8.681 11.1 23.838 2.419 33.855s-23.839 11.099-33.855 2.418L256 335.759l-104.282 90.377c-10.016 8.681-25.174 7.598-33.855-2.418"></path>';
        const svgPathExpand = '<path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="48" d="m136 208l120-104l120 104m-240 96l120 104l120-104"></path>';
        document.addEventListener('DOMContentLoaded', function () {
            const filtersCollapse = document.querySelector('.collapse');
            const filtersCollapseIcon = filtersCollapse.querySelector('svg');
            const filters = document.querySelector('.filters');
            /** @type {HTMLSelectElement} */
            const sortSelect = document.getElementById('sort-by');
            /** @type {HTMLSelectElement} */
            const orderSelect = document.getElementById('order-by');
            /** @type {HTMLSelectElement} */
            const network = document.getElementById('network');
            /** @type {HTMLSelectElement} */
            const perPage = document.getElementById('per-page');
            const pages = document.querySelectorAll('.pages button');
            console.log({pages});

            filtersCollapse.addEventListener('click', function () {
                filters.classList.toggle('collapse');
                if (filters.classList.contains('collapse')) {
                    filtersCollapseIcon.innerHTML = svgPathExpand;
                    saveFilterBoxSettings(false);
                } else {
                    filtersCollapseIcon.innerHTML = svgPathCollapse;
                    saveFilterBoxSettings(true);
                }
            });

            pages.forEach(page => {
                page.addEventListener('click', function () {
                    window.location.href = newUrl(window.location.href, getParams(), page.value);
                });
            });

            sortSelect.addEventListener('change', function () {
                window.location.href = newUrl(window.location.href, getParams());
            });
            orderSelect.addEventListener('change', function () {
                window.location.href = newUrl(window.location.href, getParams());
            });
            perPage.addEventListener('change', function () {
                window.location.href = newUrl(window.location.href, getParams());
            });
            network.addEventListener('change', function () {
                window.location.href = newUrl(window.location.href, getParams());
            });

            function getParams() {
                return [
                    {key: 'sort', value: sortSelect.value},
                    {key: 'order', value: orderSelect.value},
                    {key: 'network', value: network.value},
                    {key: 'perPage', value: perPage.value}
                ];
            }

            function newUrl(href, params, page = 1) {
                params.concat({key: 'page', page});
                const url = new URL(href);
                params.forEach(param => {
                    url.searchParams.set(param.key, param.value);
                });
                return url.href;
            }

            function saveFilterBoxSettings(open) {
                const data = {
                    'name': 'series to end: filter box',
                    'value': {
                        'open': open
                    }
                };
                fetch('{{ path('app_series_settings_save') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => response.json())
                    .then(data => console.log(data))
                    .catch(error => console.error(error));
            }
        });
    </script>
{% endblock %}