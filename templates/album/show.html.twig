{% extends 'base.html.twig' %}

{% block title %}my Tv Time → {{ 'My albums'|trans }} → {{ album.name }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('styles/series.scss') }}">
    <link rel="stylesheet" href="{{ asset('styles/album.scss') }}">
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/v3.9.1/mapbox-gl.css">
{% endblock %}

{% block body %}
    {{ include('_blocks/_menu.html.twig') }}
    <div class="container-fluid album-page" data-id="{{ album.id }}">
        <div class="header">
            <div class="h1-tools">
                <h1>{{ album.name }} ({{ album.photos|length }})</h1>
                <div class="tools">
                    <div class="photo-albums-button"><a href="{{ path('app_album_index') }}">{{ 'My albums'|trans }}</a></div>
                    <div class="add-photos-button">{{ 'Modify album'|trans }}</div>
                    <div class="layout-buttons">
                        <button class="layout-grid{% if settings.layout == 'grid' %} active{% endif %}">{{ ux_icon('mdi:view-grid') }}</button>
                        <button class="layout-list{% if settings.layout == 'list' %} active{% endif %}">{{ ux_icon('mdi:format-list-bulleted-square') }}</button>
                    </div>
                    <script>
                        window.addEventListener("DOMContentLoaded", () => {
                            const albumPhotosDiv = document.querySelector('.album-photos');
                            const layoutButtons = document.querySelectorAll('.layout-buttons button');

                            layoutButtons.forEach(button => {
                                button.addEventListener('click', () => {
                                    layoutButtons.forEach(btn => btn.classList.remove('active'));
                                    button.classList.add('active');
                                });
                            });
                            document.querySelector('.layout-grid').addEventListener('click', () => {
                                albumPhotosDiv.classList.remove('list');
                                albumPhotosDiv.classList.add('grid');
                                save('{{ album.id }}', 'grid');
                            });
                            document.querySelector('.layout-list').addEventListener('click', () => {
                                albumPhotosDiv.classList.remove('grid');
                                albumPhotosDiv.classList.add('list');
                                save('{{ album.id }}', 'list');
                            });

                            function save(id, layout) {
                                const lang = '{{ app.request.locale }}';
                                const settings = {
                                    layout: layout,
                                    photosPerPage: {{ settings.photosPerPage }},
                                };
                                fetch('/' + lang + '/album/settings/' + id, {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'X-CSRF-Token': '{{ csrf_token('settings') }}'
                                    },
                                    body: JSON.stringify(settings)
                                })
                                    .then(response => {
                                        if (!response.ok) {
                                            throw new Error('Network response was not ok');
                                        }
                                        return response.json();
                                    })
                                    .then(data => {
                                        console.log('Settings updated:', data);
                                    })
                                    .catch(error => {
                                        console.error('There was a problem with the fetch operation:', error);
                                    });
                            }
                        });
                    </script>
                </div>
            </div>
            <div class="prev-next-albums">
                {% if previousAlbum %}
                    <div class="prev-album" data-title="{{ 'Previous album'|trans }}">
                        <a href="{{ path('app_album_show', {id: previousAlbum.id}) }}">
                            {% set c = previousAlbum.photos|length %}
                            {% set photo = previousAlbum.photos[random(c-1)] %}
                            <img src="/albums/576p{{ photo.imagePath }}" alt="{{ previousAlbum.name }}">
                            <div class="chevron">{{ ux_icon('mdi:chevron-left') }}</div>
                            <div class="name">{{ previousAlbum.name }}</div>
                        </a>
                    </div>
                {% endif %}
                {% if nextAlbum %}
                    <div class="next-album" data-title="{{ 'Next album'|trans }}">
                        <a href="{{ path('app_album_show', {id: nextAlbum.id}) }}">
                            {% set c = nextAlbum.photos|length %}
                            {% set photo = nextAlbum.photos[random(c-1)] %}
                            <img src="/albums/576p{{ photo.imagePath }}" alt="{{ nextAlbum.name }}e">
                            <div class="name">{{ nextAlbum.name }}</div>
                            <div class="chevron">{{ ux_icon('mdi:chevron-right') }}</div>
                        </a>
                    </div>
                {% endif %}
            </div>
        </div>
        <div class="album-photos {{ settings.layout }}">
            {% for photo in album.photos %}
                <div class="album-photo{% if settings.layout == 'grid' and loop.index % 12 in [1, 8] %} grid-span-2{% endif %}" data-id="{{ photo.id }}">
                    <img
                            src="/albums/1080p{{ photo.imagePath }}"
                            alt="{{ photo.caption }}"
                            data-title="{{ photo.caption }} {{ photo.date|format_datetime('relative_short', 'short', locale: 'fr') }}"
                            loading="lazy"
                            srcset="/albums/576p{{ photo.imagePath }} 576w, /albums/720p{{ photo.imagePath }} 720w, /albums/1080p{{ photo.imagePath }} 1080w, /albums/original{{ photo.imagePath }} 1920w"
                    >
                    <div class="album-photo-infos">
                        <div class="name">{{ photo.caption }}</div>
                        <div class="dates">
                            <div class="date" data-title="{{ 'Date'|trans }}">{{ ux_icon('mdi:date-range') }} <span>{{ photo.date|format_datetime('relative_short', 'short', locale: 'fr')|capitalize }}</span></div>
                            <div class="created-at" data-title="{{ 'Created at'|trans }}">{{ ux_icon('mdi:update') }} {{ photo.createdAt|format_datetime('relative_short', 'short', locale: 'fr')|capitalize }}</div>
                            <div class="updated-at" data-title="{{ 'Updated at'|trans }}">{{ ux_icon('mdi:create-new-folder') }} {{ photo.updatedAt|format_datetime('relative_short', 'short', locale: 'fr')|capitalize }}</div>
                        </div>
                    </div>
                    <div class="edit-photo-button" data-id="{{ photo.id }}">{{ ux_icon('mdi:image-edit') }}</div>
                </div>
            {% else %}
                <div class="no-photo">{{ 'No photos in this album'|trans }}</div>
            {% endfor %}
        </div>
        <div class="series-map">
            <div id="map" class="map-controller"></div>
            <div class="series-map-list-toggler">
                <span>{{ ux_icon('mdi:earth') }}</span>
                <span class="hidden">{{ ux_icon('mdi:arrow-right') }}</span>
            </div>
            <div class="series-map-list">
                {{ include('_blocks/map/_thumbnails.html.twig', {styles: mapSettings.data.styles}) }}
            </div>
            <script>
                const toggler = document.querySelector('.series-map-list-toggler');
                const mapList = document.querySelector('.series-map-list');
                const spans = toggler.querySelectorAll('span');
                toggler.addEventListener('click', () => {
                    mapList.classList.toggle('active');
                    toggler.classList.toggle('active');
                    spans.forEach(span => {
                        span.classList.toggle('hidden');
                    });
                });
            </script>
        </div>
        {{ include('_blocks/forms/_modify-album-form.html.twig', addPhotoFormData) }}
        {{ include('_blocks/forms/_edit-photo-form.html.twig', addPhotoFormData) }}
    </div>
    <div id="globs-map" style="display: none">
        {
        "albumName": "{{ album.name|e('js') }}",
        "photos": {{ albumArray.photos|json_encode(constant('JSON_PRETTY_PRINT'))|raw }},
        "bounds": {{ albumArray.bounds|json_encode(constant('JSON_PRETTY_PRINT'))|raw }},
        "emptyPhoto": {{ emptyPhoto|json_encode(constant('JSON_PRETTY_PRINT'))|raw }},
        "fieldList": {{ photoFieldList|json_encode(constant('JSON_PRETTY_PRINT'))|raw }}
        }
    </div>
    <div id="globs" style="display: none">
        {
        "album": {{ albumArray|json_encode(constant('JSON_PRETTY_PRINT'))|raw }},
        "imagePaths": {{ imagePaths|json_encode(constant('JSON_PRETTY_PRINT'))|raw }},
        "srcsetPaths": {{ srcsetPaths|json_encode(constant('JSON_PRETTY_PRINT'))|raw }},
        "texts": {

        }
        }
    </div>
    <div id="svgs" style="display: none">
        <div class="svg" id="arrow-down">{{ ux_icon('fa6-solid:arrow-down') }}</div>
        <div class="svg" id="arrow-up">{{ ux_icon('fa6-solid:arrow-up') }}</div>
        <div class="svg" id="arrow-left">{{ ux_icon('fa6-solid:arrow-left') }}</div>
        <div class="svg" id="arrow-right">{{ ux_icon('fa6-solid:arrow-right') }}</div>
        <div class="svg" id="xmark">{{ ux_icon('fa6-solid:xmark') }}</div>
        <div class="svg" id="pen">{{ ux_icon('fa6-solid:pen') }}</div>
        <div class="svg" id="trash">{{ ux_icon('fa6-solid:trash') }}</div>
        // Pour les messages Flash
        <div id="svg-xmark">{{ ux_icon('fa6-solid:xmark') }}</div>
    </div>
    {% include '_blocks/_footer.html.twig' %}
{% endblock %}
