{% extends 'base.html.twig' %}

{% block title %}my Tv Time → {{ (type=='creation' ? 'Recent additions':'Recent updates')|trans }}{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('styles/filter.scss') }}">
    <link rel="stylesheet" href="{{ asset('styles/home.scss') }}">
    <link rel="stylesheet" href="{{ asset('styles/series.scss') }}">
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/v3.9.1/mapbox-gl.css">
{% endblock %}

{% block shift %}{{ ux_icon('mdi:apple-keyboard-shift', {height: '18px', width: '18px'}) }}{% endblock %}
{% block arrowUp %}{{ ux_icon('gg:arrow-up-r', {height: '18px', width: '18px'}) }}{% endblock %}
{% block arrowDown %}{{ ux_icon('gg:arrow-down-r', {height: '18px', width: '18px'}) }}{% endblock %}
{% block arrowRight %}{{ ux_icon('gg:arrow-right-r', {height: '18px', width: '18px'}) }}{% endblock %}
{% block arrowLeft %}{{ ux_icon('gg:arrow-left-r', {height: '18px', width: '18px'}) }}{% endblock %}

{% block body %}
    {% include('_blocks/_menu.html.twig') %}
    <div class="container-fluid">
        <div class="series-map import-map">
            <div class="series-map-header">
                <h1>{{ (type=='creation' ? 'Recent additions':'Recent updates')|trans }}</h1>
                <div class="numbers">
                    <div>{{ seriesCount }} {{ 'Series'|trans }}</div>
                    <div data-title="{{ filmingLocationCount }} {{ 'locations'|trans }}">{{ filmingLocationCount }} {{ ux_icon('fa6-solid:map-location-dot', {height: '32px', width: '32px'}) }}</div>
                    <div data-title="{{ filmingLocationImageCount }} {{ 'images'|trans }}">{{ filmingLocationImageCount }} {{ ux_icon('fa:picture-o', {height: '32px', width: '32px'}) }}</div>
                </div>
            </div>
            <div id="map" class="map-controller all"></div>
        </div>

        <div class="series-map-list center">
            <div class="map-tools">
                <div class="options">
                    {{ form_start(form) }}
                    <div class="form-row">
                        <div class="pages">
                            {% for p in 1..pages %}
                                {% if p == form.page.vars.value %}
                                    <button class="page active" name="{{ field_name(form.page) }}" value="{{ p }}">{{ p }}</button>
                                {% else %}
                                    <button class="page" type="submit" name="{{ field_name(form.page) }}" value="{{ p }}" data-title="{{ 'Go to page'|trans }} {{ p }}">{{ p }}</button>
                                {% endif %}
                            {% endfor %}
                        </div>
                        <label for="{{ form.perPage.vars.id }}">
                            {{ form.perPage.vars.label|trans }}
                            {{ form_widget(form.perPage) }}
                            {{ form_errors(form.perPage) }}
                        </label>
                        <label for="{{ form.type.vars.id }}">
                            {{ form.type.vars.label|trans }}
                            {{ form_widget(form.type) }}
                            {{ form_errors(form.type) }}
                        </label>
                    </div>
                    {{ form_end(form) }}
                </div>
                <div class="help">?</div>
                <div class="keyboard-help">
                    <div>{{ 'Click the map to copy the latitude and longitude to the clipboard'|trans }}</div>
                    <div></div>
                    <div>= / +: {{ 'Increase the zoom level by 1'|trans }}.</div>
                    <div>{{ block('shift') }} = / {{ block('shift') }} +: {{ 'Increase the zoom level by 2'|trans }}.</div>
                    <div>-: {{ 'Decrease the zoom level by 1'|trans }}.</div>
                    <div>{{ block('shift') }} -: {{ 'Decrease the zoom level by 2'|trans }}.</div>
                    <div>{{ 'Arrow keys'|trans }}: {{ 'Pan by 100 pixels'|trans }}.</div>
                    <div>{{ block('shift') }} {{ block('arrowRight') }}: {{ 'Increase the rotation by 15 degrees'|trans }}.</div>
                    <div>{{ block('shift') }} {{ block('arrowLeft') }}: {{ 'Decrease the rotation by 15 degrees'|trans }}.</div>
                    <div>{{ block('shift') }} {{ block('arrowUp') }}: {{ 'Increase the pitch by 10 degrees'|trans }}.</div>
                    <div>{{ block('shift') }} {{ block('arrowDown') }}: {{ 'Decrease the pitch by 10 degrees'|trans }}.</div>
                </div>
            </div>

            {{ include('_blocks/map/_thumbnails.html.twig', {styles: settings.data.styles}) }}

            <div class="all-series-locations">
                <div class="series-locations">
                    <div class="series-location-content">
                        {% set date = "" %}
                        {% for loc in locations %}
                            {% if date != loc.created_at|date("Y-m-d") %}
                                {% set date = loc.created_at|date("Y-m-d") %}
                                <div class="series-location-date">{{ date|format_date('relative_long')|capitalize }}</div>
                            {% endif %}
                            <div class="series-location" data-tmdb-id="{{ loc.tmdb_id }}">
                                <div class="series-location-image" data-title="{{ loc.location }}">
                                    <img src="/images/map{{ loc.still_path }}" alt="{{ loc.location ?? 'No title entry!!' }}">
                                    <div class="image-count">{{ loc.filmingLocationImages|length }}</div>
                                    {% if loc.episode_number %}
                                        <div class="episode">{{ "S%02dE%02d"|format(loc.season_number, loc.episode_number) }}</div>
                                    {% endif %}
                                    <div class="image-list">
                                        {% for image in loc.filmingLocationImages %}
                                            <img src="/images/map{{ image.path }}" alt="{{ loc.title }} #{{ loop.index }}">
                                        {% endfor %}
                                    </div>
                                </div>
                                <div class="series-location-title">
                                    <div class="text">{{ loc.title ?? 'No title entry!!' }}</div>
                                    <!-- Lien vers Google Maps -->
                                    <div class="google-maps">
                                        <a href="https://www.google.com/maps?q={{ loc.latitude }},{{ loc.longitude }}" target="_blank">
                                            {{ ux_icon('logos:google-maps', {height: '36px', width: '36px'}) }}
                                        </a>
                                    </div>
                                </div>
                                <div class="series-location-location">{{ loc.location }}</div>
                                <div class="series-location-description">{{ loc.description }}</div>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
        {% include('_blocks/_footer.html.twig') %}
    </div>
    <div id="globs-map" style="display: none">{# {{ locations|json_encode(constant('JSON_PRETTY_PRINT'))|raw }} #}
        {
        "locations": {{ locations|json_encode(constant('JSON_PRETTY_PRINT'))|raw }},
        "bounds": {{ bounds|json_encode(constant('JSON_PRETTY_PRINT'))|raw }}
        }
    </div>
    {# <script src="https://api.mapbox.com/mapbox-gl-js/v3.9.1/mapbox-gl.js"></script>
    <script src="/map/index.js"></script>
    <script>
        const L = window.L;
        const globsData = document.querySelector('#globs-map');
        console.log(globsData);
        const data = JSON.parse(globsData.textContent);
        const locations = data.locations;
        const center = [data.latitude, data.longitude];
        const latLngs = locations.map(location => [location.latitude, location.longitude]);
        let map;

        mapboxgl.accessToken = 'pk.eyJ1IjoiaWJveTQ0IiwiYSI6ImNtNTZqcXo4ZjAxYzIyaXM3cWZ5dnNheWkifQ.yY-zdieRm3Dhlrj3vYh9hg';
        map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/outdoors-v12',
            projection: 'globe',
            zoom: 2.5,
            center: center
        });
        map.addControl(new mapboxgl.NavigationControl());
        map.addControl(new mapboxgl.GeolocateControl({
            positionOptions: {
                enableHighAccuracy: true
            },
            trackUserLocation: true,
            showUserHeading: true
        }));
        map.on('style.load', () => {
            map.setFog({
                "range": [0.8, 1.2],
                "color": "#E0861F",
                "horizon-blend": 0.125,
                "high-color": "#112a67",
                "space-color": "#000000",
                "star-intensity": 0.15
            }); // Set the default atmosphere style
        });
        map.on('click', (e) => {
            console.log(`A click event has occurred at ${e.lngLat}`);
            // Copier les coordonnées (e.lnglat) dans le presse-papiers sous la forme "lat, lng"
            navigator.clipboard.writeText(`${e.lngLat.lat}, ${e.lngLat.lng}`);
        });

        mapboxgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js');
        const language = new MapboxLanguage();
        map.on('style.load', () => {
            map.setStyle(language.setLanguage(map.getStyle(), '{{ app.locale }}'));
        });

        locations.forEach(location => {
            let marker = new mapboxgl.Marker({color: "#B46B18FF"})
                .setLngLat([location.longitude, location.latitude])
                .setPopup(new mapboxgl.Popup().setHTML('<div class="leaflet-popup-content-title">' + location.title + '</div><div class="leaflet-popup-content-description">' + location.description + '</div><div class="leaflet-popup-content-image"><img src="/images/map' + location['still_path'] + '" alt="' + location['title'] + '" style="height: auto; width: 100%"></div>'))
                .addTo(map);
            let markerIcon = marker.getElement();
            markerIcon.setAttribute('data-tmdb-id', location.tmdb_id);
            // markerIcon.setAttribute('data-country', location.country);
            markerIcon.setAttribute('data-latitude', location.latitude);
            markerIcon.setAttribute('data-longitude', location.longitude);
        });
    </script> #}
{% endblock %}
